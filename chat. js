document.addEventListener('DOMContentLoaded', () => {
    const chatHeaderTitle = document.querySelector('#chat h2');
    const chatStatus = document.getElementById('chat-status');
    const contactList = document.getElementById('contact-list');

    const chatMessages = document.getElementById('chat-messages');
    const chatInputArea = document.getElementById('chat-input-area');
    const messageInput = document.getElementById('message-input');
    const sendButton = document.getElementById('send-button');

    const addContactBtn = document.getElementById('add-contact-btn');
    const addContactModal = document.getElementById('add-contact-modal');
    const cancelBtn = document.getElementById('cancel-add-contact-btn');
    const submitBtn = document.getElementById('submit-add-contact-btn');
    const searchInput = document.getElementById('search-contact-input');

    let currentChatPartner = null;

    loadContacts();

    if (addContactBtn && addContactModal && cancelBtn && submitBtn) {
        addContactBtn.addEventListener('click', () => addContactModal.classList.remove('hidden'));
        cancelBtn.addEventListener('click', () => addContactModal.classList.add('hidden'));
        submitBtn.addEventListener('click', () => {
            const emailToFind = searchInput.value.trim();
            if (emailToFind) {
                addContactToServer(emailToFind);
                addContactModal.classList.add('hidden');
                searchInput.value = '';
            }
        });
    }

    if (sendButton && messageInput) {
        sendButton.addEventListener('click', sendMessage);
        messageInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });
    }

    function loadContacts() {
        const apiUrl = 'https://agin-travel-backend.vercel.app/';
        
        fetch(apiUrl)
            .then(response => response.json())
            .then(contacts => {
                contactList.innerHTML = '';
                if (contacts.length === 0) {
                    contactList.innerHTML = `<p class="text-center text-gray-500 p-4">Anda belum memiliki kontak.</p>`;
                } else {
                    contacts.forEach(contact => {
                        const contactEl = document.createElement('div');
                        contactEl.className = 'flex items-center p-3 hover:bg-gray-200 rounded-lg cursor-pointer';
                        contactEl.innerHTML = `
                            <img src="${contact.avatar || 'https://cdn-icons-png.flaticon.com/512/149/149071.png'}" class="w-12 h-12 rounded-full mr-4">
                            <div>
                                <p class="font-semibold text-gray-800">${contact.name}</p>
                                <p class="text-sm text-gray-500 truncate">${contact.lastMessage || ''}</p>
                            </div>
                        `;
                        contactEl.addEventListener('click', () => openChatWith(contact));
                        contactList.appendChild(contactEl);
                    });
                }
            })
            .catch(error => {
                console.error('Gagal memuat kontak:', error);
                contactList.innerHTML = `<p class="text-center text-red-500 p-4">Gagal memuat kontak.</p>`;
            });
    }

    function openChatWith(contact) {
        currentChatPartner = contact;

        contactList.classList.add('hidden');
        addContactBtn.classList.add('hidden');
        chatMessages.classList.remove('hidden');
        chatInputArea.classList.remove('hidden');

        chatHeaderTitle.textContent = contact.name;
        chatStatus.textContent = "Online";

        loadChatHistory(contact.id);
    }

    function loadChatHistory(contactId) {
        chatMessages.innerHTML = '';
        const apiUrl = `https://agin-travel-backend.vercel.app/}`;

        fetch(apiUrl)
            .then(response => response.json())
            .then(history => {
                history.forEach(msg => addMessage(msg.text, msg.sender === 'me' ? 'sent' : 'received'));
            })
            .catch(error => console.error('Gagal memuat riwayat chat:', error));
    }

    function sendMessage() {
        const messageText = messageInput.value.trim();
        if (messageText !== '' && currentChatPartner) {
            addMessage(messageText, 'sent');
            
            const apiUrl ='https://agin-travel-backend.vercel.app/';
            fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    text: messageText,
                    recipientId: currentChatPartner.id
                })
            });
            
            messageInput.value = '';
            messageInput.focus();
        }
    }

    function addMessage(text, type) {
        const container = document.createElement('div');
        container.className = 'w-full flex mb-3 justify-' + (type === 'sent' ? 'end' : 'start');
        const bubble = document.createElement('div');
        bubble.className = 'max-w-xs md:max-w-md p-3 rounded-2xl break-words ' + (type === 'sent' ? 'bg-orange-500 text-white' : 'bg-white text-gray-700 shadow-sm');
        bubble.textContent = text;
        container.appendChild(bubble);
        chatMessages.appendChild(container);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function addContactToServer(email) {
        const apiUrl = 'https://agin-travel-backend.vercel.app/';
        fetch(apiUrl, { 
            method: 'POST', 
            headers: { 'Content-Type': 'application/json' }, 
            body: JSON.stringify({ email: email }) 
        })
        .then(res => res.json()).then(data => {
            if (data.success) {
                alert('Kontak berhasil ditambahkan!');
                loadContacts();
            } else {
                alert(`Gagal: ${data.message}`);
            }
        }).catch(err => alert('Terjadi kesalahan.'));
    }
});
