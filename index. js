
require('dotenv').config();
const express = require('express');
const cors = require('cors');
const Twilio = require('twilio');

const app = express();
app.use(cors());
app.use(express.json());

const twilioClient = Twilio(process.env.TWILIO_API_KEY_SID, process.env.TWILIO_API_KEY_SECRET, { accountSid: process.env.TWILIO_ACCOUNT_SID });
const AccessToken = Twilio.jwt.AccessToken;
const ChatGrant = AccessToken.ChatGrant;

// Endpoint untuk memberikan token chat ke user
app.get('/token', (req, res) => {
    const identity = req.query.identity; // Nama user atau ID unik
    if (!identity) {
        return res.status(400).send('Identity is required');
    }

    const chatGrant = new ChatGrant({
        serviceSid: process.env.TWILIO_CONVERSATIONS_SERVICE_SID,
    });

    const token = new AccessToken(
        process.env.TWILIO_ACCOUNT_SID,
        process.env.TWILIO_API_KEY_SID,
        process.env.TWILIO_API_KEY_SECRET,
        { identity: identity }
    );

    token.addGrant(chatGrant);
    res.send({ identity: identity, token: token.toJwt() });
});

// Endpoint untuk mengirim SMS undangan
app.post('/invite', async (req, res) => {
    const { to, from, body } = req.body; // to: no teman, from: no Twilio, body: isi pesan
    if (!to || !from || !body) {
        return res.status(400).send('Missing parameters');
    }
    try {
        await twilioClient.messages.create({ to, from, body });
        res.send({ success: true, message: 'Invite sent!' });
    } catch (error) {
        console.error(error);
        res.status(500).send({ success: false, message: 'Failed to send invite.' });
    }
});

module.exports=app;
